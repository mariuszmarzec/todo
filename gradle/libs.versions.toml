[versions]

compileSdk = "34"
minSdk = "30"
targetSdk = "34"

kotlin = "1.9.10"
ktor = "2.3.7"
okHttpClient = "4.10.0"
serialization = "1.6.2"
coreKtx = "1.3.2"
appCompat = "1.2.0"
material = "1.1.0"
coroutines = "1.6.0"
androidActivityX = "1.3.0-alpha02"
androidGradleplugin = "8.1.1"
buildkonfig = "0.11.0"
datastore = "1.0.0-alpha05"
detekt = "1.18.1"
atomicfu = "0.20.2"
googleServices = "4.3.10"
glide = "1.0.0-alpha.1"
exoPlayer = "2.18.5"
vlc = "4.7.0"
mockk = "1.13.2"
dateTime = "0.4.1"
viewModel = "2.0.0"

composePlugin = "1.7.1"
composeCompiler = "1.5.11"

[libraries]

ktorClient = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
serializationJson = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
ktorOkHttpClient = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorContentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktorSerialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
okHttpClientLogger = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okHttpClient" }
androidActivityX = { module = "androidx.activity:activity-compose", version.ref = "androidActivityX" }
kotlinStdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
coroutineCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutineTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
androidxCoreKtx = { module = "androidx.core:core-ktx", version.ref = "coreKtx" }
androidxAppCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidMaterial = { module = "com.google.android.material:material", version.ref = "material" }
activityCompose = { module = "androidx.activity:activity-compose", version.ref = "composePlugin" }
kotlinDateTime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }
googleServices = { module = "com.google.gms:google-services", version.ref = "googleServices" }
imageLoader = { module = "com.github.bumptech.glide:compose", version.ref = "glide" }
exoPlayer = { module = "com.google.android.exoplayer:exoplayer", version.ref = "exoPlayer" }
vlc = { module = "uk.co.caprica:vlcj", version.ref = "vlc" }
mockk = { module = "io.mockk:mockk-jvm", version.ref = "mockk" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }
datastore = { module = "androidx.datastore:datastore", version.ref = "datastore" }
viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "viewModel" }
compose-viewModel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "viewModel" }

plugin-composeGradle = { module = "org.jetbrains.compose:compose-gradle-plugin", version.ref = "composePlugin" }
plugin-androidBuild = { module = "com.android.tools.build:gradle", version.ref = "androidGradleplugin" }
plugin-kotlinGradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-serializationGradle = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
plugin-buildKonfig = { module = "com.codingfeline.buildkonfig:buildkonfig-gradle-plugin", version.ref = "buildkonfig" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
plugin-atomic = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }

[plugins]

[bundles]

